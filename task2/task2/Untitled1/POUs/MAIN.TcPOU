<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="MAIN" Id="{b248a891-e89a-4c70-a7b3-2582197513af}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
		
	manager : ShelfManager;
	Reset : BOOL;
	FuncTest : USINT;
	space : Space;
	
	ErrorSameID : BOOL;
	ErrorNotEnoghPlace : BOOL;
	ErrorNothingToBeTakenOut : BOOL;
	ErrorNotFound : BOOL;
	ErrorCantStoreWithoutProperties : BOOL;
	ErrorSerchWithoutPartID : BOOL;
	ErrorSpaceDoesNotExist : BOOL;
	
	doTests : BOOL;
	tests : Tests;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[manager(
	ErrorNotFound => ErrorNotFound,
	ErrorSameID => ErrorSameID,
	ErrorNothingToBeTakenOut => ErrorNothingToBeTakenOut,
	ErrorNothingToBeTakenOut => ErrorNothingToBeTakenOut,
	ErrorReset := Reset,
	ErrorCantStoreWithoutProperties => ErrorCantStoreWithoutProperties,
	ErrorSerchWithoutPartID => ErrorSerchWithoutPartID,
	ErrorSpaceDoesNotExist => ErrorSpaceDoesNotExist
);

CASE FuncTest OF
	1:
		manager.FindPart(
			SerchingPartID := space.PartID,
			FoundPart => space
		);	
	2:
		space := manager.NextFreeSpaceLight;	
	3:
		space := manager.NextFreeSpaceHeavy;
	4: 
		space := manager.NextOccupiedSpace;
	5:
	 	manager.RemoveByID(removedPartID := space.PartID);
	6: 
		manager.RemoveFIFO();
	7:
		manager.RemoveExplicit(
			column := (space.Column),
			row := (space.Row)
		);	
	8: 
		manager.StoreFIFO(
			storedFifoID := space.PartID,
			storedFifoWeight := space.Weight
		);
	9: 
		manager.StoreExplicit(storedPart := space);
	
END_CASE
FuncTest := 0;

IF doTests THEN
	tests();
	doTests := FALSE;
END_IF
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>